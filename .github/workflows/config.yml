name: Build

on: [push, workflow_dispatch]

jobs:
  linux:
    runs-on: ubuntu-22.04
    env:
      CC: gcc-11
      CXX: g++-11

    steps:
      - uses: actions/checkout@v3

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/vcpkg
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', '**/*.hpp', 'src/**/*.cpp', 'tests/tests.cpp', 'tests/CMakeLists.txt', 'CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
            ${{ runner.os }}-vcpkg-

      - name: Install prerequisites
        run: |
          sudo apt-get update && sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          python3 \
          libxinerama-dev \
          libxcursor-dev \
          xorg-dev \
          libglu1-mesa-dev \
          pkg-config \
          libdbus-1-dev \
          libxi-dev \
          libxtst-dev \
          xvfb

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1920x1080x24 &

      - name: Set DISPLAY environment variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install glad with vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '4cac260c4b7331538d31886f57739fea0bffa27e'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -B build -G "Ninja" -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE="Release"
          cmake --build build

      - name: Test
        run: |
          cd build/tests
          ctest --output-on-failure

  windows:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v3

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/vcpkg
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', '**/*.hpp', 'src/**/*.cpp', 'tests/tests.cpp', 'tests/CMakeLists.txt', 'CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
            ${{ runner.os }}-vcpkg-

      - name: Install Mesa3D
        run: |
          curl -LO https://github.com/pal1000/mesa-dist-win/releases/download/22.1.7/mesa3d-22.1.7-release-msvc.7z
          7z x mesa3d-22.1.7-release-msvc.7z -oC:\Mesa
          setx PATH "%PATH%;C:\Mesa\bin"

      - name: Verify OpenGL with Mesa3D
        run: |
          echo Checking OpenGL version with Mesa3D...
          set MESA_GL_VERSION_OVERRIDE=4.5  # Enforce OpenGL version compatibility
          set MESA_GLSL_VERSION_OVERRIDE=450
          set LIBGL_ALWAYS_SOFTWARE=true
          C:\Mesa\bin\glxinfo.exe | findstr "OpenGL"

      - name: Install glad with vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '4cac260c4b7331538d31886f57739fea0bffa27e'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -A x64 -B build -DTHREEPP_TREAT_WARNINGS_AS_ERRORS=ON -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE="Release"
          cmake --build build --config Release

      - name: Test
        run: |
          set PATH=C:\Mesa\bin;%PATH%
          cd build/tests
          ctest -C Release --output-on-failure

  darwin:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v3

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/vcpkg
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', '**/*.hpp', 'src/**/*.cpp', 'tests/tests.cpp', 'tests/CMakeLists.txt', 'CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
            ${{ runner.os }}-vcpkg-

      - name: Install prerequisites
        run: |
          brew install cmake ninja

      - name: Set up off-screen OpenGL rendering
        run: |
          echo "Setting up environment for headless OpenGL rendering on macOS"
          export LIBGL_ALWAYS_SOFTWARE=1
          export MESA_GL_VERSION_OVERRIDE=4.5
          export MESA_GLSL_VERSION_OVERRIDE=450
          export DISPLAY=:0

      - name: Install glad with vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '4cac260c4b7331538d31886f57739fea0bffa27e'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -B build -DTHREEPP_BUILD_EXAMPLES=OFF -DTHREEPP_BUILD_TESTS=OFF -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE="Release"
          cmake --build build

      - name: Test
        run: |
          cd build/tests
          ctest --output-on-failure
